package com.blockchain;

import java.io.IOException;

import org.web3j.protocol.Web3j;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.core.methods.response.EthBlockNumber;
import org.web3j.protocol.core.methods.response.EthGasPrice;
import org.web3j.protocol.core.methods.response.Web3ClientVersion;
import org.web3j.protocol.http.HttpService;

public class ETHconnect {
	private final static String PRIVATE_KEY = "0xf9b9601c3b7f979d2edac3b923f9b9d2a366396725ae7f936e291d71add835d2";
	
	public static void main(String[] args) {
	    System.out.println("Connecting to Ethereum ...");
	    Web3j web3 = Web3j.build(new HttpService("http://localhost:8545"));
	    System.out.println("Successfuly connected to Ethereum");
	    Credentials credentials = Credentials.create(PRIVATE_KEY);
	    
	    try {
	      // web3_clientVersion returns the current client version.
	      Web3ClientVersion clientVersion = web3.web3ClientVersion().send();

	      // eth_blockNumber returns the number of most recent block.
	      EthBlockNumber blockNumber = web3.ethBlockNumber().send();

	      // eth_gasPrice, returns the current price per gas in gwei.
	      EthGasPrice gasPrice = web3.ethGasPrice().send();
//	      EthGasValue gasValue = web3.eth

	      // Print result
	      System.out.println("Client version: " + clientVersion.getWeb3ClientVersion());
	      System.out.println("Block number: " + blockNumber.getBlockNumber());
	      System.out.println("Gas price: " + gasPrice.getGasPrice());

	    } catch (IOException ex) {
	      throw new RuntimeException("Error whilst sending json-rpc requests", ex);
	    }
	  
	}
}
